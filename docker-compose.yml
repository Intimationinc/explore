services:
  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      - golang-net
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - golang-net
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: app_db
    depends_on:
      - mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 5s
    expose:
      - "8081"

  mysql:
    image: arm64v8/mysql:8.0
    container_name: mysql
    networks:
      - golang-net
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DB}"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s

volumes:
  mysql_data:

networks:
  golang-net:
    driver: bridge
